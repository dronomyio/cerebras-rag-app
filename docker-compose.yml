services:
  # Nginx for serving the web application
  nginx:
    image: nginx:alpine
    ports:
      - "8088:80"
      - "8443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./data/index.html:/var/www/index.html
    depends_on:
      - webapp
    networks:
      - cerebras-network
    restart: always

  # Redis for session management and caching
  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - cerebras-network
    restart: always

  # Weaviate vector database
  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.30.3
    ports:
      - "8081:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "false"
      AUTHENTICATION_APIKEY_ENABLED: "true"
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: ${WEAVIATE_ADMIN_KEY}
      AUTHENTICATION_APIKEY_USERS: "admin@example.com"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      DEFAULT_VECTORIZER_MODULE: "text2vec-transformers"
      ENABLE_MODULES: "text2vec-transformers"
      TRANSFORMERS_INFERENCE_API: "http://t2v-transformers:8080"
    volumes:
      - weaviate-data:/var/lib/weaviate
    networks:
      - cerebras-network
    restart: always

  # Text2Vec Transformers for vectorization
  t2v-transformers:
    image: semitechnologies/transformers-inference:sentence-transformers-paraphrase-multilingual-mpnet-base-v2
    environment:
      ENABLE_CUDA: "0"
    networks:
      - cerebras-network
    restart: always

  # Document processor service
  document-processor:
    build:
      context: ./src/document_processor
      dockerfile: Dockerfile
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      - ./data/uploads:/app/data/uploads
      - ./src:/src  # Mount the entire src directory to fix import issues
    environment:
      WEAVIATE_URL: http://weaviate:8080
      WEAVIATE_API_KEY: ${WEAVIATE_ADMIN_KEY}
      UNSTRUCTURED_API_KEY: ${UNSTRUCTURED_API_KEY}
      PYTHONPATH: /app:/src  # Set PYTHONPATH environment variable
    networks:
      - cerebras-network
    restart: always
    healthcheck:
      test: ["CMD", "python", "-c", "import importlib.util; importlib.util.find_spec('pymupdf') and importlib.util.find_spec('pypdf') and exit(0) or exit(1)"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web application
  webapp:
    build:
      context: ./src/webapp
      dockerfile: Dockerfile
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      - ./src/document_processor:/app/document_processor
      - ./src/llm_providers:/app/llm_providers
      - ./src/agent_core:/app/agent_core
      - ./src/webapp:/app
    environment:
      FLASK_APP: app.py
      FLASK_ENV: production
      WEAVIATE_URL: http://weaviate:8080
      WEAVIATE_API_KEY: ${WEAVIATE_ADMIN_KEY}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      CEREBRAS_API_KEY: ${CEREBRAS_API_KEY}
      CEREBRAS_API_URL: ${CEREBRAS_API_URL}
      CODE_EXECUTOR_URL: http://code-executor:5001
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      WEBAPP_SECRET_KEY: ${WEBAPP_SECRET_KEY}
      PYTHONPATH: /app:/app/document_processor:/app/llm_providers:/app/agent_core
    depends_on:
      - redis
      - weaviate
      - document-processor
    networks:
      - cerebras-network
    restart: always

  # Code executor service
  code-executor:
    build:
      context: ./src/code_executor
      dockerfile: Dockerfile
    environment:
      MAX_EXECUTION_TIME: 30
    networks:
      - cerebras-network
    restart: always

networks:
  cerebras-network:
    driver: bridge

volumes:
  redis-data:
  weaviate-data:
